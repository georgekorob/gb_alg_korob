# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции
# вводятся пользователем. После выполнения вычисления программа не должна завершаться, а должна запрашивать новые
# данные для вычислений. Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
# снова запрашивать знак операции. Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в
# качестве делителя.


# reads = ['4 0 4', '35 + 23', '3 * 2', '6 / 0', '3 r 4', '34 - 3', '30 / 5', 'r / 5', '4*4']


# while reads:
while True:
    # read_ev = reads.pop()
    # print(read_ev, end='\t')
    read_ev = input('Введите выражение (число операнд число): ')
    try:
        num1, action, num2 = read_ev.split()
        if action not in ['0', '+', '-', '*', '/']:
            raise ValueError
        num1, num2 = int(num1), int(num2)
    except ValueError:
        print("Необходимо, чтобы на месте операнда был символ из списка ['0', '+', '-', '*', '/']. \
А на расстоянии пробела от операнда находились числа.")
        continue

    read_ev += ' = '
    if action == '0':
        break
    elif action == '+':
        print(f'{read_ev}{num1 + num2}')
    elif action == '-':
        print(f'{read_ev}{num1 - num2}')
    elif action == '*':
        print(f'{read_ev}{num1 * num2}')
    elif action == '/':
        try:
            print(f'{read_ev}{num1 / num2}')
        except ZeroDivisionError:
            print('Деление на ноль недопустимо!')
    else:
        raise MemoryError
